{
  "name": "logio",
  "description": "Installs/Configures logio",
  "long_description": "Description\n===========\n\nRecipes to install log.io's server and harverster components.\n\nThere's two recipes, as you might expect:\n\n* server: installs the server\n* harvester: installs the harvester\n\nThis cookbook also provides an LWRP for adding log file paths to the\nharvester.  Example usage:\n\n    logio_harvester_path \"/var/log/httpd/access.log\" do\n      action :add\n    end\n\n    logio_harvester_path \"/var/log/tomcat6/catalina.out\" do\n      action :remove\n    end\n\nNeither the harvester nor server recipes switch npm to unsafe mode; therefore,\nyou will only be able to harvest logs that are world-readable.  Future\nversions of this cookbook may have a better solution (e.g. usage of Linux\ncapabilities, SELinux, AppArmor, ...)\n\nRequirements\n============\n\nWritten for and tested on CentOS 6.2.\n\nMarius Ducea's nodejs cookbook: https://github.com/mdxp/nodejs-cookbook\n\nThis cookbook uses Linux capabilities (specifically, `CAP_DAC_READ_SEARCH`) to\ngrant a logio user read-only permissions to log files.\n\nAttributes\n==========\n\n* `logio[:dir]`: The directory where the log.io harvester or server will be\n  installed.  Defaults to `node[:nodejs][:dir]`.\n\nUsage\n=====\n\n",
  "maintainer": "Northwestern University",
  "maintainer_email": "YOUR_EMAIL",
  "license": "Apache 2.0",
  "platforms": {
  },
  "dependencies": {
    "nodejs": ">= 0.0.0"
  },
  "recommendations": {
  },
  "suggestions": {
  },
  "conflicting": {
  },
  "providing": {
  },
  "replacing": {
  },
  "attributes": {
  },
  "groupings": {
  },
  "recipes": {
  },
  "version": "0.0.1"
}