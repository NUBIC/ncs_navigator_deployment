# This file is automatically maintained by Chef.  Manual edits will be
# overwritten.

# Creates PSUs, SSUs, TSUs from navigator.ini
c.add_transformer SamplingUnits.create_transformer(c)

def shared_filters(config)
  [
    ApplyGlobalValuesFilter.new(config), NoBlankForeignKeysFilter
  ]
end

### STAFF PORTAL ###

STAFF_PORTAL_PATH = '<%= @sp_root %>'

$LOAD_PATH << STAFF_PORTAL_PATH + '/current/lib'
require 'ncs_navigator/staff_portal/warehouse'

# Loads Staff Portal-like operational data that was not imported
# TODO: this transformer needs an option to not fail if there are no matchin files
c.add_transformer VdrXml.from_most_recent_file(c,
  STAFF_PORTAL_PATH + '/shared/importer_passthrough/outside_staff*.xml',
  :filters => shared_filters(c)
  )

# Loads operational data from Staff Portal
c.add_transformer NcsNavigator::StaffPortal::Warehouse::Enumerator.
  create_transformer(c, :filters => shared_filters(c))

### CORE ###

NCS_NAVIGATOR_CORE_PATH = '<%= @cr_root %>'

$LOAD_PATH << NCS_NAVIGATOR_CORE_PATH + '/current/lib'
require 'ncs_navigator/core/warehouse'

# Loads operational data from Core
c.add_transformer NcsNavigator::Core::Warehouse::OperationalEnumerator.
  create_transformer(c, :filters => shared_filters(c))

# Loads operational data from an import that did not get into Core
c.add_transformer VdrXml.from_most_recent_file(c,
  NCS_NAVIGATOR_CORE_PATH + '/shared/importer_passthrough/operational*.xml',
  :filters => shared_filters(c)
)

# Loads instrument data from surveys in Core (does not accept filters)
c.add_transformer NcsNavigator::Core::Warehouse::InstrumentEnumerator.
  create_transformer(c)

# Loads instrument data for imported instruments that are not available in Core
c.add_transformer VdrXml.from_most_recent_file(c,
  NCS_NAVIGATOR_CORE_PATH + '/shared/importer_passthrough/instruments*.xml',
  :filters => shared_filters(c)
)
