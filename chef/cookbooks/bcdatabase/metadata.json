{
  "name": "bcdatabase",
  "description": "Installs/Configures bcdatabase",
  "long_description": "= DESCRIPTION:\n\nSets up a bcdatabase configuration skeleton.  Also manages bcdatabase\nconfiguration.\n\nThe default recipe:\n\n1. Installs bcdatabase using the system's Ruby installation.\n2. Creates `/etc/nubic/db` and `/var/lib/nubic`.\n3. Checks for `/var/lib/nubic/db.pass`.  If it does not exist, then executes\n   `bcdatabase gen-key` and stores the result in `/var/lib/nubic/db.pass`.\n\nIt does _not_ generate passwords for applications.\n\nThis cookbook also provides a `config` LWRP for manipulating bcdatabase groups.\nA usage example:\n\n\n    bcdatabase_config \"nubic_cas\" do\n      action :create\n      group \"local_postgresql\"\n      username \"nubic_cas\"\n      password secure_password\n      url \"jdbc:postgresql://localhost/nubic_cas\"\n    end\n\n\nTo set defaults:\n\n\n    bcdatabase_config \"defaults\" do\n      action :create\n      group \"local_postgresql\"\n      adapter \"postgresql\"\n      host \"localhost\"\n      port 12345\n    end\n\n(NB: Opscode's `openssl` cookbook provides a `secure_password` method that uses\n`OpenSSL::Random#random_bytes` from OpenSSL's Ruby binding to generate\n20-character long passwords.)\n\nThe create action of the LWRP does the following:\n\n1. Checks if the group exists.  If it doesn't, the group is created.\n2. Checks if the configuration exists in the given group.  If it doesn't, the\n   configuration is appended.\n\n= REQUIREMENTS:\n\n* RHEL 6.1.\n* A (non-RVM) Ruby installation.  (If you're running Chef, though, you probably\n  already have this...)\n\n= ATTRIBUTES:\n\n* `bcdatabase[:app_group]`: The application user group.  This group will be\n  granted read access to the bcdatabase configuration files and key.  Defaults\n  to `application_users[:group]` if that attribute is defined; otherwise,\n  defaults to `app`.\n* `bcdatabase[:group_mode]`: The mode on group and key files.  Defaults to\n  \"0640\", i.e. read-write owner and read-only group.\n* `bcdatabase[:version]`: Specifies the version of bcdatabase to install;\n  defaults to \">= 0\".  Any valid RubyGems version spec string can be used in\n  this attribute.\n\n= USAGE:\n\nInclude the recipe in your node's run list, set attributes, run it.\n",
  "maintainer": "Northwestern University",
  "maintainer_email": "sysadmin@bioinformatics.northwestern.edu",
  "license": "Apache 2.0",
  "platforms": {
  },
  "dependencies": {
    "application_user": ">= 0.0.0"
  },
  "recommendations": {
  },
  "suggestions": {
  },
  "conflicting": {
  },
  "providing": {
  },
  "replacing": {
  },
  "attributes": {
  },
  "groupings": {
  },
  "recipes": {
  },
  "version": "0.2.0"
}