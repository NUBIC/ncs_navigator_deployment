= DESCRIPTION:

Sets up a bcdatabase configuration skeleton.  Also manages bcdatabase
configuration.

The default recipe:

1. Installs bcdatabase using the system's Ruby installation.
2. Creates `/etc/nubic/db` and `/var/lib/nubic`.
3. Checks for `/var/lib/nubic/db.pass`.  If it does not exist, then executes
   `bcdatabase gen-key` and stores the result in `/var/lib/nubic/db.pass`.

It does _not_ generate passwords for applications.

This cookbook also provides a `config` LWRP for manipulating bcdatabase groups.
A usage example:


    bcdatabase_config "nubic_cas" do
      action :create
      group "local_postgresql"
      username "nubic_cas"
      password secure_password
      url "jdbc:postgresql://localhost/nubic_cas"
    end


To set defaults:


    bcdatabase_config "defaults" do
      action :create
      group "local_postgresql"
      adapter "postgresql"
      host "localhost"
      port 12345
    end

(NB: Opscode's `openssl` cookbook provides a `secure_password` method that uses
`OpenSSL::Random#random_bytes` from OpenSSL's Ruby binding to generate
20-character long passwords.)

The create action of the LWRP does the following:

1. Checks if the group exists.  If it doesn't, the group is created.
2. Checks if the configuration exists in the given group.  If it doesn't, the
   configuration is appended.

= REQUIREMENTS:

* RHEL 6.1.
* A (non-RVM) Ruby installation.  (If you're running Chef, though, you probably
  already have this...)

= ATTRIBUTES:

* `bcdatabase[:app_group]`: The application user group.  This group will be
  granted read access to the bcdatabase configuration files and key.  Defaults
  to `application_users[:group]` if that attribute is defined; otherwise,
  defaults to `app`.
* `bcdatabase[:group_mode]`: The mode on group and key files.  Defaults to
  "0640", i.e. read-write owner and read-only group.
* `bcdatabase[:version]`: Specifies the version of bcdatabase to install;
  defaults to ">= 0".  Any valid RubyGems version spec string can be used in
  this attribute.

= USAGE:

Include the recipe in your node's run list, set attributes, run it.
